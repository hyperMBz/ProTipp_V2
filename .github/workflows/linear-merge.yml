name: Linear merge sync

on:
  pull_request:
    types: [closed]

jobs:
  done-on-merge:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Mark Linear issue Done (if PR-prefixed)
        shell: bash
        run: |
          set -e
          if [ -z "$LINEAR_API_KEY" ]; then
            echo "Missing LINEAR_API_KEY" >&2
            exit 1
          fi
          TITLE="${PR_TITLE}"
          # Feltételezés: a PR-ból létrehozott issue címe `PR: <title>` vagy azonos cím.
          SEARCH="PR: ${TITLE}"
          read -r -d '' QUERY <<'EOF'
          query SearchIssues($query: String!) {
            issues(filter: { query: { contains: $query } }, first: 1) {
              nodes { id identifier title state { id name } }
            }
          }
          EOF
          JSON=$(jq -n --arg q "$SEARCH" '{query:$q, variables:{query:$q}}')
          RES=$(curl -sS https://api.linear.app/graphql -H "Content-Type: application/json" -H "Authorization: ${LINEAR_API_KEY}" -d "$JSON")
          ID=$(echo "$RES" | jq -r '.data.issues.nodes[0].id // empty')
          if [ -z "$ID" ]; then
            echo "No matching Linear issue for: $SEARCH"; exit 0
          fi
          # Move to Done
          read -r -d '' MUT <<'EOF'
          mutation IssueUpdate($id: String!, $input: IssueUpdateInput!) {
            issueUpdate(id: $id, input: $input) { success }
          }
          EOF
          INPUT=$(jq -n --arg id "$ID" --arg state "Done" '{query:$Q, variables:{id:$id, input:{state:"Done"}}}' --arg Q "$MUT")
          # Fallback: if state by name not allowed, omit and rely on automation; otherwise extend to fetch state ID
          echo "$INPUT" > req.json
          # NOTE: some Linear accounts require stateID; itt minimal change: try with `completedAt` timestamp
          NOW=$(date -u +%FT%TZ)
          read -r -d '' MUT2 <<'EOF'
          mutation IssueUpdate($id: String!, $input: IssueUpdateInput!) {
            issueUpdate(id: $id, input: $input) { success }
          }
          EOF
          INPUT2=$(jq -n --arg id "$ID" --arg time "$NOW" '{query:$Q, variables:{id:$id, input:{completedAt:$time}}}' --arg Q "$MUT2")
          curl -sS https://api.linear.app/graphql -H "Content-Type: application/json" -H "Authorization: ${LINEAR_API_KEY}" -d "$INPUT2" | tee response.json
        env:
          LINEAR_API_KEY: ${{ secrets.LINEAR_API_KEY }}
          PR_TITLE: ${{ github.event.pull_request.title }}
