name: Linear seed (one-click)

on:
  workflow_dispatch:
    inputs:
      projectPrefix:
        description: 'Project/Epic name prefix (optional)'
        required: false
        default: 'ProTipp'

jobs:
  seed:
    runs-on: ubuntu-latest
    steps:
      - name: Seed Linear workspace
        shell: bash
        run: |
          set -e
          endpoint=https://api.linear.app/graphql
          auth="$LINEAR_API_KEY"
          team="$LINEAR_TEAM_ID"

          call() {
            local q="$1"; shift
            local vars="$1"; shift || true
            curl -sS "$endpoint" -H "Content-Type: application/json" -H "Authorization: $auth" -d "{\"query\":$q,\"variables\":$vars}" | jq -r '.'
          }

          echo 'Creating labels (feat, bug, chore, docs, auth, analytics, ui, ci)…'
          read -r -d '' Q_LABEL <<'EOF'
          mutation CreateLabel($input: IssueLabelCreateInput!) {
            issueLabelCreate(input: $input) { success issueLabel { id name } }
          }
          EOF
          for L in feat bug chore docs auth analytics ui ci; do
            V=$(jq -n --arg name "$L" --arg team "$team" '{input:{name:$name, teamId:$team}}')
            call "$Q_LABEL" "$V" > /dev/null || true
          done

          echo 'Creating projects (epics)…'
          read -r -d '' Q_PROJECT <<'EOF'
          mutation ProjectCreate($input: ProjectCreateInput!) {
            projectCreate(input: $input) { success project { id name } }
          }
          EOF
          for P in "Platform alapok" "UI/Design" "Integrációk" "Minőség"; do
            V=$(jq -n --arg name "$P" --arg team "$team" '{input:{name:$name, teamIds:[$team]}}')
            call "$Q_PROJECT" "$V" > /dev/null || true
          done

          echo 'Creating Project Overview issue…'
          read -r -d '' Q_ISSUE <<'EOF'
          mutation IssueCreate($input: IssueCreateInput!) {
            issueCreate(input: $input) { success issue { identifier url } }
          }
          EOF
          overview=$'GitHub repo: https://github.com/hyperMBz/ProTipp_V2\nLive: https://protipp.netlify.app\nActions: https://github.com/hyperMBz/ProTipp_V2/actions\nDesign System: DESIGN_SYSTEM.md\nAgents: AGENTS.md\nDocs overview: docs/overview.md'
          V=$(jq -n --arg team "$team" --arg title "Project Overview" --arg desc "$overview" '{input:{teamId:$team, title:$title, description:$desc, priority:3}}')
          call "$Q_ISSUE" "$V"
        env:
          LINEAR_API_KEY: ${{ secrets.LINEAR_API_KEY }}
          LINEAR_TEAM_ID: ${{ secrets.LINEAR_TEAM_ID }}
