name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-test:
    name: Lint, unit/integration, coverage, e2e
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      NEXT_PUBLIC_ODDS_API_KEY: ${{ secrets.NEXT_PUBLIC_ODDS_API_KEY }}
      ODDS_API_BASE_URL: https://api.the-odds-api.com/v4
      NODE_ENV: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.1.30

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Lint & Typecheck
        run: bun run lint

      - name: Install Playwright Browsers
        uses: microsoft/playwright-github-action@v1

      - name: Unit & Integration tests
        run: bun run test:all

      - name: Coverage
        run: bun run test:coverage

      - name: E2E tests (Playwright)
        run: bun run test:e2e

      - name: Upload Playwright report (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          if-no-files-found: ignore

  semgrep:
    name: Semgrep Code Scan
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: ${{ secrets.SEMGREP_APP_TOKEN != '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          publishToken: ${{ secrets.SEMGREP_APP_TOKEN }}
          config: >-
            p/ci


